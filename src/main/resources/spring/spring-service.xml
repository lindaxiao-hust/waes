<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd">
    <!-- 扫描service包下所有使用注解的类型 -->
    <!-- @Component @Service @Dao @Controller -->
    <context:component-scan base-package="com.waes.service" />

    <!-- 配置事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!-- 注入数据库的连接池 -->
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 配置基于注解的声明式事务
        默认使用注解来管理事务行为，使用注解控制事务方法的优点：
        1.开发团队达成一致约定，明确标注事务方法的编程风格
        2.保证事务方法的执行时间尽可能短，不要穿插其他的网络操作RPC/HTTP请求（剥离到事务方法外部）
        3.不是所有的方法都需要事务，如只有一条修改操作，只读操作不需要事务操作
        事务操作：两条以上的修改操作需要同时去完成，当只读操作里面需要select、update语句时（mysql行级锁）
        无并发控制或多个修改操作时不需要事务操作
     -->
    <tx:annotation-driven transaction-manager="transactionManager"/>
</beans>